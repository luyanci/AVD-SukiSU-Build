name: Build SukiSU AVD Kernel
on:
  workflow_dispatch:
    inputs:
      KERNEL_VERSION:
        description: "Kernel version (default: common-android15-6.6-2025-02)"
        required: true
        default: "common-android15-6.6-2025-02"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: "true"
          remove-android: "true"
          remove-haskell: "true"
          remove-codeql: "true"

      - name: Install repo tool
        run: |
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
          chmod a+x ~/repo
          sudo mv ~/repo /usr/local/bin/repo

      - name: Setup kernel source
        run: |
          echo "Free space:"
          df -h
          # wget https://android.googlesource.com/kernel/manifest/+/refs/heads/${{ inputs.KERNEL_VERSION }}/default.xml
          # repo init --depth=1 -u https://android.googlesource.com/kernel/manifest -m default.xml
          repo init --depth=1 -u https://android.googlesource.com/kernel/manifest -b ${{ inputs.KERNEL_VERSION }}
          repo --version
          repo --trace sync -c -j$(nproc --all) --no-tags
          df -h

      - name: Add BBG
        shell: bash
        run: |
          set -euo pipefail
          echo "Adding BBG..."
          wget -O- https://github.com/luyanci/Baseband-guard/raw/refs/heads/main/setup.sh | bash
          sed -i '/^config LSM$/,/^help$/{ /^[[:space:]]*default/ { /baseband_guard/! s/lockdown/lockdown,baseband_guard/ } }' common/security/Kconfig

      # - name: Setup SukiSU
      #   run: |
      #     curl -LSs "https://raw.githubusercontent.com/SukiSU-Ultra/SukiSU-Ultra/main/kernel/setup.sh" | bash -s main
      #     mkdir target
      #     mkdir target/logs
      #     # sed -i 's/-DKSU_VERSION=11998/-DKSU_VERSION=12816/g' KernelSU/kernel/Makefile

      - name: Build kernel
        run: |
          ./tools/bazel run --verbose_failures --jobs=$(nproc --all) --make_jobs=$(nproc --all) --config=android_ci --profile=target/logs/command.profile.json //common-modules/virtual-device:virtual_device_x86_64_dist -- --dist_dir=target --flat

      - name: Upload Kernel
        uses: actions/upload-artifact@v4
        with:
          name: kernel-avd-${{ inputs.KERNEL_VERSION }}
          path: "target/bzImage"
